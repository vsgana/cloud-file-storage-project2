import json
import boto3

s3 = boto3.client('s3')
cognito = boto3.client('cognito-idp')

BUCKET_NAME = ""

def lambda_handler(event, context):
    try:
        body = json.loads(event.get('body', '{}'))
        access_token = body.get('accessToken')
        folder_name = body.get('folderName')

        if not access_token or not folder_name:
            return {
                "statusCode": 400,
                "body": json.dumps({"message": "accessToken and folderName are required"})
            }

        # Get user ID from Cognito
        user_info = cognito.get_user(AccessToken=access_token)
        user_id = None
        for attr in user_info['UserAttributes']:
            if attr['Name'] == 'sub':
                user_id = attr['Value']
                break

        if not user_id:
            return {
                "statusCode": 500,
                "body": json.dumps({"message": "User ID not found"})
            }

        # Ensure folder name ends with "/"
        if not folder_name.endswith('/'):
            folder_name += '/'

        # Create zero-byte object to represent folder
        folder_key = f"{user_id}/{folder_name}"
        s3.put_object(Bucket=BUCKET_NAME, Key=folder_key)

        return {
            "statusCode": 200,
            "body": json.dumps({"message": f"Folder '{folder_name}' created successfully"})
        }

    except Exception as e:
        return {
            "statusCode": 500,
            "body": json.dumps({"message": "Failed to create folder", "error": str(e)})
        }
