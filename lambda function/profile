import json
import boto3

client = boto3.client('cognito-idp')

def lambda_handler(event, context):
    try:
        # Get Authorization header
        headers = event.get('headers', {})
        auth_header = headers.get('Authorization')

        if not auth_header:
            return {
                'statusCode': 400,
                'body': json.dumps({'message': 'Authorization header is required'})
            }

        # Remove "Bearer " if it exists
        if auth_header.lower().startswith("bearer "):
            access_token = auth_header[7:]
        else:
            access_token = auth_header

        # Call Cognito to get user info
        user_info = client.get_user(AccessToken=access_token)

        # Prepare attributes as a dictionary
        attributes = {attr['Name']: attr['Value'] for attr in user_info['UserAttributes']}

        return {
            'statusCode': 200,
            'headers': {
                'Access-Control-Allow-Origin': '*',
                'Access-Control-Allow-Credentials': 'true'
            },
            'body': json.dumps({
                'message': 'User profile retrieved successfully',
                'username': user_info['Username'],
                'attributes': attributes
            })
        }

    except client.exceptions.NotAuthorizedException:
        return {
            'statusCode': 401,
            'body': json.dumps({'message': 'Invalid or expired token'})
        }
    except Exception as e:
        return {
            'statusCode': 500,
            'body': json.dumps({'message': 'Error retrieving profile', 'error': str(e)})
        }
